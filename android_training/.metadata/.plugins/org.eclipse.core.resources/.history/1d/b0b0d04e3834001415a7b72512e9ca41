package com.example.volleytraing;

import com.android.volley.RequestQueue;
import com.android.volley.toolbox.Volley;

import android.app.Activity;
import android.os.Bundle;

public class RequestQueueActivity extends Activity {

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);

		// 一个RequestQueue需要两部分来支持它的工作：
		// 一部分是网络操作用来执行请求的数据传输,另外一个是用来处理缓存操作的Cache

		// 在Volley的工具箱中包含了标准的实现方式：
		// DiskBasedCache提供了每个文件与对应响应数据一一映射的缓存实现。
		// BasicNetwork提供了一个网络传输的实现，连接方式可以是AndroidHttpClient 或者是 HttpURLConnection.

		// BasicNetwork是Volley默认的网络操作实现方式。一个BasicNetwork必须使用HTTP Client进行初始化。
		// 这个Client通常是AndroidHttpClient 或者 HttpURLConnection:
		
		// 显示的调用RequestQueue
		RequestQueue requestQueue = new RequestQueue(cache, network)

	}
}
